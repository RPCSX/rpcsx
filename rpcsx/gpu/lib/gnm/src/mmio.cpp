#include "mmio.hpp"

const char *gnm::mmio::registerName(unsigned offset) {
  switch (offset) {
  case 0x20ad:
    return "CP_PRT_LOD_STATS_CNTL0";
  case 0x20ae:
    return "CP_PRT_LOD_STATS_CNTL1";
  case 0x20af:
    return "CP_PRT_LOD_STATS_CNTL2";
  case 0x2232:
    return "VGT_ESGS_RING_SIZE";
  case 0x2233:
    return "VGT_GSVS_RING_SIZE";
  case 0x2262:
    return "VGT_TF_RING_SIZE";
  case 0x226e:
    return "VGT_TF_MEMORY_BASE";
  case 0x23c0:
    return "SQ_BUF_RSRC_WORD0";
  case 0x23c1:
    return "SQ_BUF_RSRC_WORD1";
  case 0x23c2:
    return "SQ_BUF_RSRC_WORD2";
  case 0x23c3:
    return "SQ_BUF_RSRC_WORD3";
  case 0x23c4:
    return "SQ_IMG_RSRC_WORD0";
  case 0x23c5:
    return "SQ_IMG_RSRC_WORD1";
  case 0x23c6:
    return "SQ_IMG_RSRC_WORD2";
  case 0x23c7:
    return "SQ_IMG_RSRC_WORD3";
  case 0x23c8:
    return "SQ_IMG_RSRC_WORD4";
  case 0x23c9:
    return "SQ_IMG_RSRC_WORD5";
  case 0x23ca:
    return "SQ_IMG_RSRC_WORD6";
  case 0x23cc:
    return "SQ_IMG_SAMP_WORD0";
  case 0x23cd:
    return "SQ_IMG_SAMP_WORD1";
  case 0x23ce:
    return "SQ_IMG_SAMP_WORD2";
  case 0x23cf:
    return "SQ_IMG_SAMP_WORD3";
  case 0x2c07:
    return "SPI_SHADER_PGM_RSRC3_PS";
  case 0x2c08:
    return "SPI_SHADER_PGM_LO_PS";
  case 0x2c09:
    return "SPI_SHADER_PGM_HI_PS";
  case 0x2c0a:
    return "SPI_SHADER_PGM_RSRC1_PS";
  case 0x2c0b:
    return "SPI_SHADER_PGM_RSRC2_PS";
  case 0x2c0c:
    return "SPI_SHADER_USER_DATA_PS_0";
  case 0x2c0d:
    return "SPI_SHADER_USER_DATA_PS_1";
  case 0x2c0e:
    return "SPI_SHADER_USER_DATA_PS_2";
  case 0x2c0f:
    return "SPI_SHADER_USER_DATA_PS_3";
  case 0x2c10:
    return "SPI_SHADER_USER_DATA_PS_4";
  case 0x2c11:
    return "SPI_SHADER_USER_DATA_PS_5";
  case 0x2c12:
    return "SPI_SHADER_USER_DATA_PS_6";
  case 0x2c13:
    return "SPI_SHADER_USER_DATA_PS_7";
  case 0x2c14:
    return "SPI_SHADER_USER_DATA_PS_8";
  case 0x2c15:
    return "SPI_SHADER_USER_DATA_PS_9";
  case 0x2c16:
    return "SPI_SHADER_USER_DATA_PS_10";
  case 0x2c17:
    return "SPI_SHADER_USER_DATA_PS_11";
  case 0x2c18:
    return "SPI_SHADER_USER_DATA_PS_12";
  case 0x2c19:
    return "SPI_SHADER_USER_DATA_PS_13";
  case 0x2c1a:
    return "SPI_SHADER_USER_DATA_PS_14";
  case 0x2c1b:
    return "SPI_SHADER_USER_DATA_PS_15";
  case 0x2c47:
    return "SPI_SHADER_PGM_RSRC3_VS";
  case 0x2c48:
    return "SPI_SHADER_PGM_LO_VS";
  case 0x2c49:
    return "SPI_SHADER_PGM_HI_VS";
  case 0x2c4a:
    return "SPI_SHADER_PGM_RSRC1_VS";
  case 0x2c4b:
    return "SPI_SHADER_PGM_RSRC2_VS";
  case 0x2c4c:
    return "SPI_SHADER_USER_DATA_VS_0";
  case 0x2c4d:
    return "SPI_SHADER_USER_DATA_VS_1";
  case 0x2c4e:
    return "SPI_SHADER_USER_DATA_VS_2";
  case 0x2c4f:
    return "SPI_SHADER_USER_DATA_VS_3";
  case 0x2c50:
    return "SPI_SHADER_USER_DATA_VS_4";
  case 0x2c51:
    return "SPI_SHADER_USER_DATA_VS_5";
  case 0x2c52:
    return "SPI_SHADER_USER_DATA_VS_6";
  case 0x2c53:
    return "SPI_SHADER_USER_DATA_VS_7";
  case 0x2c54:
    return "SPI_SHADER_USER_DATA_VS_8";
  case 0x2c55:
    return "SPI_SHADER_USER_DATA_VS_9";
  case 0x2c56:
    return "SPI_SHADER_USER_DATA_VS_10";
  case 0x2c57:
    return "SPI_SHADER_USER_DATA_VS_11";
  case 0x2c58:
    return "SPI_SHADER_USER_DATA_VS_12";
  case 0x2c59:
    return "SPI_SHADER_USER_DATA_VS_13";
  case 0x2c5a:
    return "SPI_SHADER_USER_DATA_VS_14";
  case 0x2c5b:
    return "SPI_SHADER_USER_DATA_VS_15";
  case 0x2c87:
    return "SPI_SHADER_PGM_RSRC3_GS";
  case 0x2c88:
    return "SPI_SHADER_PGM_LO_GS";
  case 0x2c89:
    return "SPI_SHADER_PGM_HI_GS";
  case 0x2c8a:
    return "SPI_SHADER_PGM_RSRC1_GS";
  case 0x2c8b:
    return "SPI_SHADER_PGM_RSRC2_GS";
  case 0x2c8c:
    return "SPI_SHADER_USER_DATA_GS_0";
  case 0x2c8d:
    return "SPI_SHADER_USER_DATA_GS_1";
  case 0x2c8e:
    return "SPI_SHADER_USER_DATA_GS_2";
  case 0x2c8f:
    return "SPI_SHADER_USER_DATA_GS_3";
  case 0x2c90:
    return "SPI_SHADER_USER_DATA_GS_4";
  case 0x2c91:
    return "SPI_SHADER_USER_DATA_GS_5";
  case 0x2c92:
    return "SPI_SHADER_USER_DATA_GS_6";
  case 0x2c93:
    return "SPI_SHADER_USER_DATA_GS_7";
  case 0x2c94:
    return "SPI_SHADER_USER_DATA_GS_8";
  case 0x2c95:
    return "SPI_SHADER_USER_DATA_GS_9";
  case 0x2c96:
    return "SPI_SHADER_USER_DATA_GS_10";
  case 0x2c97:
    return "SPI_SHADER_USER_DATA_GS_11";
  case 0x2c98:
    return "SPI_SHADER_USER_DATA_GS_12";
  case 0x2c99:
    return "SPI_SHADER_USER_DATA_GS_13";
  case 0x2c9a:
    return "SPI_SHADER_USER_DATA_GS_14";
  case 0x2c9b:
    return "SPI_SHADER_USER_DATA_GS_15";
  case 0x2cc7:
    return "SPI_SHADER_PGM_RSRC3_ES";
  case 0x2cc8:
    return "SPI_SHADER_PGM_LO_ES";
  case 0x2cc9:
    return "SPI_SHADER_PGM_HI_ES";
  case 0x2cca:
    return "SPI_SHADER_PGM_RSRC1_ES";
  case 0x2ccb:
    return "SPI_SHADER_PGM_RSRC2_ES";
  case 0x2ccc:
    return "SPI_SHADER_USER_DATA_ES_0";
  case 0x2ccd:
    return "SPI_SHADER_USER_DATA_ES_1";
  case 0x2cce:
    return "SPI_SHADER_USER_DATA_ES_2";
  case 0x2ccf:
    return "SPI_SHADER_USER_DATA_ES_3";
  case 0x2cd0:
    return "SPI_SHADER_USER_DATA_ES_4";
  case 0x2cd1:
    return "SPI_SHADER_USER_DATA_ES_5";
  case 0x2cd2:
    return "SPI_SHADER_USER_DATA_ES_6";
  case 0x2cd3:
    return "SPI_SHADER_USER_DATA_ES_7";
  case 0x2cd4:
    return "SPI_SHADER_USER_DATA_ES_8";
  case 0x2cd5:
    return "SPI_SHADER_USER_DATA_ES_9";
  case 0x2cd6:
    return "SPI_SHADER_USER_DATA_ES_10";
  case 0x2cd7:
    return "SPI_SHADER_USER_DATA_ES_11";
  case 0x2cd8:
    return "SPI_SHADER_USER_DATA_ES_12";
  case 0x2cd9:
    return "SPI_SHADER_USER_DATA_ES_13";
  case 0x2cda:
    return "SPI_SHADER_USER_DATA_ES_14";
  case 0x2cdb:
    return "SPI_SHADER_USER_DATA_ES_15";
  case 0x2d07:
    return "SPI_SHADER_PGM_RSRC3_HS";
  case 0x2d08:
    return "SPI_SHADER_PGM_LO_HS";
  case 0x2d09:
    return "SPI_SHADER_PGM_HI_HS";
  case 0x2d0a:
    return "SPI_SHADER_PGM_RSRC1_HS";
  case 0x2d0b:
    return "SPI_SHADER_PGM_RSRC2_HS";
  case 0x2d0c:
    return "SPI_SHADER_USER_DATA_HS_0";
  case 0x2d0d:
    return "SPI_SHADER_USER_DATA_HS_1";
  case 0x2d0e:
    return "SPI_SHADER_USER_DATA_HS_2";
  case 0x2d0f:
    return "SPI_SHADER_USER_DATA_HS_3";
  case 0x2d10:
    return "SPI_SHADER_USER_DATA_HS_4";
  case 0x2d11:
    return "SPI_SHADER_USER_DATA_HS_5";
  case 0x2d12:
    return "SPI_SHADER_USER_DATA_HS_6";
  case 0x2d13:
    return "SPI_SHADER_USER_DATA_HS_7";
  case 0x2d14:
    return "SPI_SHADER_USER_DATA_HS_8";
  case 0x2d15:
    return "SPI_SHADER_USER_DATA_HS_9";
  case 0x2d16:
    return "SPI_SHADER_USER_DATA_HS_10";
  case 0x2d17:
    return "SPI_SHADER_USER_DATA_HS_11";
  case 0x2d18:
    return "SPI_SHADER_USER_DATA_HS_12";
  case 0x2d19:
    return "SPI_SHADER_USER_DATA_HS_13";
  case 0x2d1a:
    return "SPI_SHADER_USER_DATA_HS_14";
  case 0x2d1b:
    return "SPI_SHADER_USER_DATA_HS_15";
  case 0x2d47:
    return "SPI_SHADER_PGM_RSRC3_LS";
  case 0x2d48:
    return "SPI_SHADER_PGM_LO_LS";
  case 0x2d49:
    return "SPI_SHADER_PGM_HI_LS";
  case 0x2d4a:
    return "SPI_SHADER_PGM_RSRC1_LS";
  case 0x2d4b:
    return "SPI_SHADER_PGM_RSRC2_LS";
  case 0x2d4c:
    return "SPI_SHADER_USER_DATA_LS_0";
  case 0x2d4d:
    return "SPI_SHADER_USER_DATA_LS_1";
  case 0x2d4e:
    return "SPI_SHADER_USER_DATA_LS_2";
  case 0x2d4f:
    return "SPI_SHADER_USER_DATA_LS_3";
  case 0x2d50:
    return "SPI_SHADER_USER_DATA_LS_4";
  case 0x2d51:
    return "SPI_SHADER_USER_DATA_LS_5";
  case 0x2d52:
    return "SPI_SHADER_USER_DATA_LS_6";
  case 0x2d53:
    return "SPI_SHADER_USER_DATA_LS_7";
  case 0x2d54:
    return "SPI_SHADER_USER_DATA_LS_8";
  case 0x2d55:
    return "SPI_SHADER_USER_DATA_LS_9";
  case 0x2d56:
    return "SPI_SHADER_USER_DATA_LS_10";
  case 0x2d57:
    return "SPI_SHADER_USER_DATA_LS_11";
  case 0x2d58:
    return "SPI_SHADER_USER_DATA_LS_12";
  case 0x2d59:
    return "SPI_SHADER_USER_DATA_LS_13";
  case 0x2d5a:
    return "SPI_SHADER_USER_DATA_LS_14";
  case 0x2d5b:
    return "SPI_SHADER_USER_DATA_LS_15";
  case 0x2e00:
    return "COMPUTE_DISPATCH_INITIATOR";
  case 0x2e07:
    return "COMPUTE_NUM_THREAD_X";
  case 0x2e08:
    return "COMPUTE_NUM_THREAD_Y";
  case 0x2e09:
    return "COMPUTE_NUM_THREAD_Z";
  case 0x2e0c:
    return "COMPUTE_PGM_LO";
  case 0x2e0d:
    return "COMPUTE_PGM_HI";
  case 0x2e12:
    return "COMPUTE_PGM_RSRC1";
  case 0x2e13:
    return "COMPUTE_PGM_RSRC2";
  case 0x2e15:
    return "COMPUTE_RESOURCE_LIMITS";
  case 0x2e16:
    return "COMPUTE_STATIC_THREAD_MGMT_SE0";
  case 0x2e17:
    return "COMPUTE_STATIC_THREAD_MGMT_SE1";
  case 0x2e18:
    return "COMPUTE_TMPRING_SIZE";
  case 0x2e40:
    return "COMPUTE_USER_DATA_0";
  case 0x2e41:
    return "COMPUTE_USER_DATA_1";
  case 0x2e42:
    return "COMPUTE_USER_DATA_2";
  case 0x2e43:
    return "COMPUTE_USER_DATA_3";
  case 0x2e44:
    return "COMPUTE_USER_DATA_4";
  case 0x2e45:
    return "COMPUTE_USER_DATA_5";
  case 0x2e46:
    return "COMPUTE_USER_DATA_6";
  case 0x2e47:
    return "COMPUTE_USER_DATA_7";
  case 0x2e48:
    return "COMPUTE_USER_DATA_8";
  case 0x2e49:
    return "COMPUTE_USER_DATA_9";
  case 0x2e4a:
    return "COMPUTE_USER_DATA_10";
  case 0x2e4b:
    return "COMPUTE_USER_DATA_11";
  case 0x2e4c:
    return "COMPUTE_USER_DATA_12";
  case 0x2e4d:
    return "COMPUTE_USER_DATA_13";
  case 0x2e4e:
    return "COMPUTE_USER_DATA_14";
  case 0x2e4f:
    return "COMPUTE_USER_DATA_15";
  case 0x3049:
    return "CP_INT_CNTL";
  case 0x324b:
    return "CP_HQD_QUEUE_PRIORITY";
  case 0x324c:
    return "CP_HQD_QUANTUM";
  case 0xa000:
    return "DB_RENDER_CONTROL";
  case 0xa001:
    return "DB_COUNT_CONTROL";
  case 0xa002:
    return "DB_DEPTH_VIEW";
  case 0xa003:
    return "DB_RENDER_OVERRIDE";
  case 0xa004:
    return "DB_RENDER_OVERRIDE2";
  case 0xa005:
    return "DB_HTILE_DATA_BASE";
  case 0xa008:
    return "DB_DEPTH_BOUNDS_MIN";
  case 0xa009:
    return "DB_DEPTH_BOUNDS_MAX";
  case 0xa00a:
    return "DB_STENCIL_CLEAR";
  case 0xa00b:
    return "DB_DEPTH_CLEAR";
  case 0xa00c:
    return "PA_SC_SCREEN_SCISSOR_TL";
  case 0xa00d:
    return "PA_SC_SCREEN_SCISSOR_BR";
  case 0xa00f:
    return "DB_DEPTH_INFO";
  case 0xa010:
    return "DB_Z_INFO";
  case 0xa011:
    return "DB_STENCIL_INFO";
  case 0xa012:
    return "DB_Z_READ_BASE";
  case 0xa013:
    return "DB_STENCIL_READ_BASE";
  case 0xa014:
    return "DB_Z_WRITE_BASE";
  case 0xa015:
    return "DB_STENCIL_WRITE_BASE";
  case 0xa016:
    return "DB_DEPTH_SIZE";
  case 0xa017:
    return "DB_DEPTH_SLICE";
  case 0xa020:
    return "TA_BC_BASE_ADDR";
  case 0xa080:
    return "PA_SC_WINDOW_OFFSET";
  case 0xa081:
    return "PA_SC_WINDOW_SCISSOR_TL";
  case 0xa082:
    return "PA_SC_WINDOW_SCISSOR_BR";
  case 0xa083:
    return "PA_SC_CLIPRECT_RULE";
  case 0xa084:
    return "PA_SC_CLIPRECT_0_TL";
  case 0xa085:
    return "PA_SC_CLIPRECT_0_BR";
  case 0xa086:
    return "PA_SC_CLIPRECT_1_TL";
  case 0xa087:
    return "PA_SC_CLIPRECT_1_BR";
  case 0xa088:
    return "PA_SC_CLIPRECT_2_TL";
  case 0xa089:
    return "PA_SC_CLIPRECT_2_BR";
  case 0xa08a:
    return "PA_SC_CLIPRECT_3_TL";
  case 0xa08b:
    return "PA_SC_CLIPRECT_3_BR";
  case 0xa08d:
    return "PA_SU_HARDWARE_SCREEN_OFFSET";
  case 0xa08e:
    return "CB_TARGET_MASK";
  case 0xa08f:
    return "CB_SHADER_MASK";
  case 0xa090:
    return "PA_SC_GENERIC_SCISSOR_TL";
  case 0xa091:
    return "PA_SC_GENERIC_SCISSOR_BR";
  case 0xa094:
    return "PA_SC_VPORT_SCISSOR_0_TL";
  case 0xa095:
    return "PA_SC_VPORT_SCISSOR_0_BR";
  case 0xa096:
    return "PA_SC_VPORT_SCISSOR_1_TL";
  case 0xa097:
    return "PA_SC_VPORT_SCISSOR_1_BR";
  case 0xa098:
    return "PA_SC_VPORT_SCISSOR_2_TL";
  case 0xa099:
    return "PA_SC_VPORT_SCISSOR_2_BR";
  case 0xa09a:
    return "PA_SC_VPORT_SCISSOR_3_TL";
  case 0xa09b:
    return "PA_SC_VPORT_SCISSOR_3_BR";
  case 0xa09c:
    return "PA_SC_VPORT_SCISSOR_4_TL";
  case 0xa09d:
    return "PA_SC_VPORT_SCISSOR_4_BR";
  case 0xa09e:
    return "PA_SC_VPORT_SCISSOR_5_TL";
  case 0xa09f:
    return "PA_SC_VPORT_SCISSOR_5_BR";
  case 0xa0a0:
    return "PA_SC_VPORT_SCISSOR_6_TL";
  case 0xa0a1:
    return "PA_SC_VPORT_SCISSOR_6_BR";
  case 0xa0a2:
    return "PA_SC_VPORT_SCISSOR_7_TL";
  case 0xa0a3:
    return "PA_SC_VPORT_SCISSOR_7_BR";
  case 0xa0a4:
    return "PA_SC_VPORT_SCISSOR_8_TL";
  case 0xa0a5:
    return "PA_SC_VPORT_SCISSOR_8_BR";
  case 0xa0a6:
    return "PA_SC_VPORT_SCISSOR_9_TL";
  case 0xa0a7:
    return "PA_SC_VPORT_SCISSOR_9_BR";
  case 0xa0a8:
    return "PA_SC_VPORT_SCISSOR_10_TL";
  case 0xa0a9:
    return "PA_SC_VPORT_SCISSOR_10_BR";
  case 0xa0aa:
    return "PA_SC_VPORT_SCISSOR_11_TL";
  case 0xa0ab:
    return "PA_SC_VPORT_SCISSOR_11_BR";
  case 0xa0ac:
    return "PA_SC_VPORT_SCISSOR_12_TL";
  case 0xa0ad:
    return "PA_SC_VPORT_SCISSOR_12_BR";
  case 0xa0ae:
    return "PA_SC_VPORT_SCISSOR_13_TL";
  case 0xa0af:
    return "PA_SC_VPORT_SCISSOR_13_BR";
  case 0xa0b0:
    return "PA_SC_VPORT_SCISSOR_14_TL";
  case 0xa0b1:
    return "PA_SC_VPORT_SCISSOR_14_BR";
  case 0xa0b2:
    return "PA_SC_VPORT_SCISSOR_15_TL";
  case 0xa0b3:
    return "PA_SC_VPORT_SCISSOR_15_BR";
  case 0xa0b4:
    return "PA_SC_VPORT_ZMIN_0";
  case 0xa0b5:
    return "PA_SC_VPORT_ZMAX_0";
  case 0xa0b6:
    return "PA_SC_VPORT_ZMIN_1";
  case 0xa0b7:
    return "PA_SC_VPORT_ZMAX_1";
  case 0xa0b8:
    return "PA_SC_VPORT_ZMIN_2";
  case 0xa0b9:
    return "PA_SC_VPORT_ZMAX_2";
  case 0xa0ba:
    return "PA_SC_VPORT_ZMIN_3";
  case 0xa0bb:
    return "PA_SC_VPORT_ZMAX_3";
  case 0xa0bc:
    return "PA_SC_VPORT_ZMIN_4";
  case 0xa0bd:
    return "PA_SC_VPORT_ZMAX_4";
  case 0xa0be:
    return "PA_SC_VPORT_ZMIN_5";
  case 0xa0bf:
    return "PA_SC_VPORT_ZMAX_5";
  case 0xa0c0:
    return "PA_SC_VPORT_ZMIN_6";
  case 0xa0c1:
    return "PA_SC_VPORT_ZMAX_6";
  case 0xa0c2:
    return "PA_SC_VPORT_ZMIN_7";
  case 0xa0c3:
    return "PA_SC_VPORT_ZMAX_7";
  case 0xa0c4:
    return "PA_SC_VPORT_ZMIN_8";
  case 0xa0c5:
    return "PA_SC_VPORT_ZMAX_8";
  case 0xa0c6:
    return "PA_SC_VPORT_ZMIN_9";
  case 0xa0c7:
    return "PA_SC_VPORT_ZMAX_9";
  case 0xa0c8:
    return "PA_SC_VPORT_ZMIN_10";
  case 0xa0c9:
    return "PA_SC_VPORT_ZMAX_10";
  case 0xa0ca:
    return "PA_SC_VPORT_ZMIN_11";
  case 0xa0cb:
    return "PA_SC_VPORT_ZMAX_11";
  case 0xa0cc:
    return "PA_SC_VPORT_ZMIN_12";
  case 0xa0cd:
    return "PA_SC_VPORT_ZMAX_12";
  case 0xa0ce:
    return "PA_SC_VPORT_ZMIN_13";
  case 0xa0cf:
    return "PA_SC_VPORT_ZMAX_13";
  case 0xa0d0:
    return "PA_SC_VPORT_ZMIN_14";
  case 0xa0d1:
    return "PA_SC_VPORT_ZMAX_14";
  case 0xa0d2:
    return "PA_SC_VPORT_ZMIN_15";
  case 0xa0d3:
    return "PA_SC_VPORT_ZMAX_15";
  case 0xa0d8:
    return "CP_PERFMON_CNTX_CNTL";
  case 0xa100:
    return "VGT_MAX_VTX_INDX";
  case 0xa101:
    return "VGT_MIN_VTX_INDX";
  case 0xa102:
    return "VGT_INDX_OFFSET";
  case 0xa103:
    return "VGT_MULTI_PRIM_IB_RESET_INDX";
  case 0xa105:
    return "CB_BLEND_RED";
  case 0xa106:
    return "CB_BLEND_GREEN";
  case 0xa107:
    return "CB_BLEND_BLUE";
  case 0xa108:
    return "CB_BLEND_ALPHA";
  case 0xa10b:
    return "DB_STENCIL_CONTROL";
  case 0xa10c:
    return "DB_STENCILREFMASK";
  case 0xa10d:
    return "DB_STENCILREFMASK_BF";
  case 0xa10f:
    return "PA_CL_VPORT_XSCALE";
  case 0xa110:
    return "PA_CL_VPORT_XOFFSET";
  case 0xa111:
    return "PA_CL_VPORT_YSCALE";
  case 0xa112:
    return "PA_CL_VPORT_YOFFSET";
  case 0xa113:
    return "PA_CL_VPORT_ZSCALE";
  case 0xa114:
    return "PA_CL_VPORT_ZOFFSET";
  case 0xa115:
    return "PA_CL_VPORT_XSCALE_1";
  case 0xa116:
    return "PA_CL_VPORT_XOFFSET_1";
  case 0xa117:
    return "PA_CL_VPORT_YSCALE_1";
  case 0xa118:
    return "PA_CL_VPORT_YOFFSET_1";
  case 0xa119:
    return "PA_CL_VPORT_ZSCALE_1";
  case 0xa11a:
    return "PA_CL_VPORT_ZOFFSET_1";
  case 0xa11b:
    return "PA_CL_VPORT_XSCALE_2";
  case 0xa11c:
    return "PA_CL_VPORT_XOFFSET_2";
  case 0xa11d:
    return "PA_CL_VPORT_YSCALE_2";
  case 0xa11e:
    return "PA_CL_VPORT_YOFFSET_2";
  case 0xa11f:
    return "PA_CL_VPORT_ZSCALE_2";
  case 0xa120:
    return "PA_CL_VPORT_ZOFFSET_2";
  case 0xa121:
    return "PA_CL_VPORT_XSCALE_3";
  case 0xa122:
    return "PA_CL_VPORT_XOFFSET_3";
  case 0xa123:
    return "PA_CL_VPORT_YSCALE_3";
  case 0xa124:
    return "PA_CL_VPORT_YOFFSET_3";
  case 0xa125:
    return "PA_CL_VPORT_ZSCALE_3";
  case 0xa126:
    return "PA_CL_VPORT_ZOFFSET_3";
  case 0xa127:
    return "PA_CL_VPORT_XSCALE_4";
  case 0xa128:
    return "PA_CL_VPORT_XOFFSET_4";
  case 0xa129:
    return "PA_CL_VPORT_YSCALE_4";
  case 0xa12a:
    return "PA_CL_VPORT_YOFFSET_4";
  case 0xa12b:
    return "PA_CL_VPORT_ZSCALE_4";
  case 0xa12c:
    return "PA_CL_VPORT_ZOFFSET_4";
  case 0xa12d:
    return "PA_CL_VPORT_XSCALE_5";
  case 0xa12e:
    return "PA_CL_VPORT_XOFFSET_5";
  case 0xa12f:
    return "PA_CL_VPORT_YSCALE_5";
  case 0xa130:
    return "PA_CL_VPORT_YOFFSET_5";
  case 0xa131:
    return "PA_CL_VPORT_ZSCALE_5";
  case 0xa132:
    return "PA_CL_VPORT_ZOFFSET_5";
  case 0xa133:
    return "PA_CL_VPORT_XSCALE_6";
  case 0xa134:
    return "PA_CL_VPORT_XOFFSET_6";
  case 0xa135:
    return "PA_CL_VPORT_YSCALE_6";
  case 0xa136:
    return "PA_CL_VPORT_YOFFSET_6";
  case 0xa137:
    return "PA_CL_VPORT_ZSCALE_6";
  case 0xa138:
    return "PA_CL_VPORT_ZOFFSET_6";
  case 0xa139:
    return "PA_CL_VPORT_XSCALE_7";
  case 0xa13a:
    return "PA_CL_VPORT_XOFFSET_7";
  case 0xa13b:
    return "PA_CL_VPORT_YSCALE_7";
  case 0xa13c:
    return "PA_CL_VPORT_YOFFSET_7";
  case 0xa13d:
    return "PA_CL_VPORT_ZSCALE_7";
  case 0xa13e:
    return "PA_CL_VPORT_ZOFFSET_7";
  case 0xa13f:
    return "PA_CL_VPORT_XSCALE_8";
  case 0xa140:
    return "PA_CL_VPORT_XOFFSET_8";
  case 0xa141:
    return "PA_CL_VPORT_YSCALE_8";
  case 0xa142:
    return "PA_CL_VPORT_YOFFSET_8";
  case 0xa143:
    return "PA_CL_VPORT_ZSCALE_8";
  case 0xa144:
    return "PA_CL_VPORT_ZOFFSET_8";
  case 0xa145:
    return "PA_CL_VPORT_XSCALE_9";
  case 0xa146:
    return "PA_CL_VPORT_XOFFSET_9";
  case 0xa147:
    return "PA_CL_VPORT_YSCALE_9";
  case 0xa148:
    return "PA_CL_VPORT_YOFFSET_9";
  case 0xa149:
    return "PA_CL_VPORT_ZSCALE_9";
  case 0xa14a:
    return "PA_CL_VPORT_ZOFFSET_9";
  case 0xa14b:
    return "PA_CL_VPORT_XSCALE_10";
  case 0xa14c:
    return "PA_CL_VPORT_XOFFSET_10";
  case 0xa14d:
    return "PA_CL_VPORT_YSCALE_10";
  case 0xa14e:
    return "PA_CL_VPORT_YOFFSET_10";
  case 0xa14f:
    return "PA_CL_VPORT_ZSCALE_10";
  case 0xa150:
    return "PA_CL_VPORT_ZOFFSET_10";
  case 0xa151:
    return "PA_CL_VPORT_XSCALE_11";
  case 0xa152:
    return "PA_CL_VPORT_XOFFSET_11";
  case 0xa153:
    return "PA_CL_VPORT_YSCALE_11";
  case 0xa154:
    return "PA_CL_VPORT_YOFFSET_11";
  case 0xa155:
    return "PA_CL_VPORT_ZSCALE_11";
  case 0xa156:
    return "PA_CL_VPORT_ZOFFSET_11";
  case 0xa157:
    return "PA_CL_VPORT_XSCALE_12";
  case 0xa158:
    return "PA_CL_VPORT_XOFFSET_12";
  case 0xa159:
    return "PA_CL_VPORT_YSCALE_12";
  case 0xa15a:
    return "PA_CL_VPORT_YOFFSET_12";
  case 0xa15b:
    return "PA_CL_VPORT_ZSCALE_12";
  case 0xa15c:
    return "PA_CL_VPORT_ZOFFSET_12";
  case 0xa15d:
    return "PA_CL_VPORT_XSCALE_13";
  case 0xa15e:
    return "PA_CL_VPORT_XOFFSET_13";
  case 0xa15f:
    return "PA_CL_VPORT_YSCALE_13";
  case 0xa160:
    return "PA_CL_VPORT_YOFFSET_13";
  case 0xa161:
    return "PA_CL_VPORT_ZSCALE_13";
  case 0xa162:
    return "PA_CL_VPORT_ZOFFSET_13";
  case 0xa163:
    return "PA_CL_VPORT_XSCALE_14";
  case 0xa164:
    return "PA_CL_VPORT_XOFFSET_14";
  case 0xa165:
    return "PA_CL_VPORT_YSCALE_14";
  case 0xa166:
    return "PA_CL_VPORT_YOFFSET_14";
  case 0xa167:
    return "PA_CL_VPORT_ZSCALE_14";
  case 0xa168:
    return "PA_CL_VPORT_ZOFFSET_14";
  case 0xa169:
    return "PA_CL_VPORT_XSCALE_15";
  case 0xa16a:
    return "PA_CL_VPORT_XOFFSET_15";
  case 0xa16b:
    return "PA_CL_VPORT_YSCALE_15";
  case 0xa16c:
    return "PA_CL_VPORT_YOFFSET_15";
  case 0xa16d:
    return "PA_CL_VPORT_ZSCALE_15";
  case 0xa16e:
    return "PA_CL_VPORT_ZOFFSET_15";
  case 0xa16f:
    return "PA_CL_UCP_0_X";
  case 0xa170:
    return "PA_CL_UCP_0_Y";
  case 0xa171:
    return "PA_CL_UCP_0_Z";
  case 0xa172:
    return "PA_CL_UCP_0_W";
  case 0xa191:
    return "SPI_PS_INPUT_CNTL_0";
  case 0xa1b1:
    return "SPI_VS_OUT_CONFIG";
  case 0xa1b3:
    return "SPI_PS_INPUT_ENA";
  case 0xa1b4:
    return "SPI_PS_INPUT_ADDR";
  case 0xa1b6:
    return "SPI_PS_IN_CONTROL";
  case 0xa1b8:
    return "SPI_BARYC_CNTL";
  case 0xa1ba:
    return "SPI_TMPRING_SIZE";
  case 0xa1c3:
    return "SPI_SHADER_POS_FORMAT";
  case 0xa1c4:
    return "SPI_SHADER_Z_FORMAT";
  case 0xa1c5:
    return "SPI_SHADER_COL_FORMAT";
  case 0xa1e0:
    return "CB_BLEND0_CONTROL";
  case 0xa1f9:
    return "VGT_DMA_BASE_HI";
  case 0xa1fa:
    return "VGT_DMA_BASE";
  case 0xa1fc:
    return "VGT_DRAW_INITIATOR";
  case 0xa1fd:
    return "VGT_IMMED_DATA";
  case 0xa200:
    return "DB_DEPTH_CONTROL";
  case 0xa201:
    return "DB_EQAA";
  case 0xa202:
    return "CB_COLOR_CONTROL";
  case 0xa203:
    return "DB_SHADER_CONTROL";
  case 0xa204:
    return "PA_CL_CLIP_CNTL";
  case 0xa205:
    return "PA_SU_SC_MODE_CNTL";
  case 0xa206:
    return "PA_CL_VTE_CNTL";
  case 0xa207:
    return "PA_CL_VS_OUT_CNTL";
  case 0xa280:
    return "PA_SU_POINT_SIZE";
  case 0xa281:
    return "PA_SU_POINT_MINMAX";
  case 0xa282:
    return "PA_SU_LINE_CNTL";
  case 0xa284:
    return "VGT_OUTPUT_PATH_CNTL";
  case 0xa286:
    return "VGT_HOS_MAX_TESS_LEVEL";
  case 0xa287:
    return "VGT_HOS_MIN_TESS_LEVEL";
  case 0xa290:
    return "VGT_GS_MODE";
  case 0xa291:
    return "VGT_GS_ONCHIP_CNTL";
  case 0xa292:
    return "PA_SC_MODE_CNTL_0";
  case 0xa293:
    return "PA_SC_MODE_CNTL_1";
  case 0xa295:
    return "VGT_GS_PER_ES";
  case 0xa296:
    return "VGT_ES_PER_GS";
  case 0xa297:
    return "VGT_GS_PER_VS";
  case 0xa298:
    return "VGT_GSVS_RING_OFFSET_1";
  case 0xa299:
    return "VGT_GSVS_RING_OFFSET_2";
  case 0xa29a:
    return "VGT_GSVS_RING_OFFSET_3";
  case 0xa29b:
    return "VGT_GS_OUT_PRIM_TYPE";
  case 0xa29d:
    return "VGT_DMA_SIZE";
  case 0xa29e:
    return "VGT_DMA_MAX_SIZE";
  case 0xa29f:
    return "VGT_DMA_INDEX_TYPE";
  case 0xa2a1:
    return "VGT_PRIMITIVEID_EN";
  case 0xa2a2:
    return "VGT_DMA_NUM_INSTANCES";
  case 0xa2a5:
    return "VGT_MULTI_PRIM_IB_RESET_EN";
  case 0xa2a8:
    return "VGT_INSTANCE_STEP_RATE_0";
  case 0xa2a9:
    return "VGT_INSTANCE_STEP_RATE_1";
  case 0xa2aa:
    return "IA_MULTI_VGT_PARAM";
  case 0xa2ab:
    return "VGT_ESGS_RING_ITEMSIZE";
  case 0xa2ac:
    return "VGT_GSVS_RING_ITEMSIZE";
  case 0xa2ad:
    return "VGT_REUSE_OFF";
  case 0xa2ae:
    return "VGT_VTX_CNT_EN";
  case 0xa2af:
    return "DB_HTILE_SURFACE";
  case 0xa2b0:
    return "DB_SRESULTS_COMPARE_STATE0";
  case 0xa2b1:
    return "DB_SRESULTS_COMPARE_STATE1";
  case 0xa2b4:
    return "VGT_STRMOUT_BUFFER_SIZE_0";
  case 0xa2b5:
    return "VGT_STRMOUT_VTX_STRIDE_0";
  case 0xa2b8:
    return "VGT_STRMOUT_BUFFER_SIZE_1";
  case 0xa2b9:
    return "VGT_STRMOUT_VTX_STRIDE_1";
  case 0xa2bc:
    return "VGT_STRMOUT_BUFFER_SIZE_2";
  case 0xa2bd:
    return "VGT_STRMOUT_VTX_STRIDE_2";
  case 0xa2c0:
    return "VGT_STRMOUT_BUFFER_SIZE_3";
  case 0xa2c1:
    return "VGT_STRMOUT_VTX_STRIDE_3";
  case 0xa2ca:
    return "VGT_STRMOUT_DRAW_OPAQUE_OFFSET";
  case 0xa2cb:
    return "VGT_STRMOUT_DRAW_OPAQUE_BUFFER_FILLED_SIZE";
  case 0xa2cc:
    return "VGT_STRMOUT_DRAW_OPAQUE_VERTEX_STRIDE";
  case 0xa2ce:
    return "VGT_GS_MAX_VERT_OUT";
  case 0xa2d5:
    return "VGT_SHADER_STAGES_EN";
  case 0xa2d6:
    return "VGT_LS_HS_CONFIG";
  case 0xa2d7:
    return "VGT_GS_VERT_ITEMSIZE";
  case 0xa2d8:
    return "VGT_GS_VERT_ITEMSIZE_1";
  case 0xa2d9:
    return "VGT_GS_VERT_ITEMSIZE_2";
  case 0xa2da:
    return "VGT_GS_VERT_ITEMSIZE_3";
  case 0xa2db:
    return "VGT_TF_PARAM";
  case 0xa2dc:
    return "DB_ALPHA_TO_MASK";
  case 0xa2dd:
    return "VGT_DISPATCH_DRAW_INDEX";
  case 0xa2de:
    return "PA_SU_POLY_OFFSET_DB_FMT_CNTL";
  case 0xa2df:
    return "PA_SU_POLY_OFFSET_CLAMP";
  case 0xa2e0:
    return "PA_SU_POLY_OFFSET_FRONT_SCALE";
  case 0xa2e1:
    return "PA_SU_POLY_OFFSET_FRONT_OFFSET";
  case 0xa2e2:
    return "PA_SU_POLY_OFFSET_BACK_SCALE";
  case 0xa2e3:
    return "PA_SU_POLY_OFFSET_BACK_OFFSET";
  case 0xa2e4:
    return "VGT_GS_INSTANCE_CNT";
  case 0xa2e5:
    return "VGT_STRMOUT_CONFIG";
  case 0xa2e6:
    return "VGT_STRMOUT_BUFFER_CONFIG";
  case 0xa2f5:
    return "PA_SC_CENTROID_PRIORITY_0";
  case 0xa2f6:
    return "PA_SC_CENTROID_PRIORITY_1";
  case 0xa2f8:
    return "PA_SC_AA_CONFIG";
  case 0xa2f9:
    return "PA_SU_VTX_CNTL";
  case 0xa2fa:
    return "PA_CL_GB_VERT_CLIP_ADJ";
  case 0xa2fb:
    return "PA_CL_GB_VERT_DISC_ADJ";
  case 0xa2fc:
    return "PA_CL_GB_HORZ_CLIP_ADJ";
  case 0xa2fd:
    return "PA_CL_GB_HORZ_DISC_ADJ";
  case 0xa2fe:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_0";
  case 0xa2ff:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_1";
  case 0xa300:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_2";
  case 0xa301:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_3";
  case 0xa302:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_0";
  case 0xa303:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_1";
  case 0xa304:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_2";
  case 0xa305:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_3";
  case 0xa306:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_0";
  case 0xa307:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_1";
  case 0xa308:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_2";
  case 0xa309:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_3";
  case 0xa30a:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_0";
  case 0xa30b:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_1";
  case 0xa30c:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_2";
  case 0xa30d:
    return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_3";
  case 0xa30e:
    return "PA_SC_AA_MASK_X0Y0_X1Y0";
  case 0xa30f:
    return "PA_SC_AA_MASK_X0Y1_X1Y1";
  case 0xa317:
    return "VGT_OUT_DEALLOC_CNTL";
  case 0xa318:
    return "CB_COLOR0_BASE";
  case 0xa319:
    return "CB_COLOR0_PITCH";
  case 0xa31a:
    return "CB_COLOR0_SLICE";
  case 0xa31b:
    return "CB_COLOR0_VIEW";
  case 0xa31c:
    return "CB_COLOR0_INFO";
  case 0xa31d:
    return "CB_COLOR0_ATTRIB";
  case 0xa31e:
    return "CB_COLOR0_DCC_BASE";
  case 0xa31f:
    return "CB_COLOR0_CMASK";
  case 0xa320:
    return "CB_COLOR0_CMASK_SLICE";
  case 0xa321:
    return "CB_COLOR0_FMASK";
  case 0xa322:
    return "CB_COLOR0_FMASK_SLICE";
  case 0xa323:
    return "CB_COLOR0_CLEAR_WORD0";
  case 0xa324:
    return "CB_COLOR0_CLEAR_WORD1";
  case 0xa327:
    return "CB_COLOR1_BASE";
  case 0xa328:
    return "CB_COLOR1_PITCH";
  case 0xa329:
    return "CB_COLOR1_SLICE";
  case 0xa32a:
    return "CB_COLOR1_VIEW";
  case 0xa32b:
    return "CB_COLOR1_INFO";
  case 0xa32c:
    return "CB_COLOR1_ATTRIB";
  case 0xa32d:
    return "CB_COLOR1_DCC_BASE";
  case 0xa32e:
    return "CB_COLOR1_CMASK";
  case 0xa32f:
    return "CB_COLOR1_CMASK_SLICE";
  case 0xa330:
    return "CB_COLOR1_FMASK";
  case 0xa331:
    return "CB_COLOR1_FMASK_SLICE";
  case 0xa332:
    return "CB_COLOR1_CLEAR_WORD0";
  case 0xa333:
    return "CB_COLOR1_CLEAR_WORD1";
  case 0xa336:
    return "CB_COLOR2_BASE";
  case 0xa337:
    return "CB_COLOR2_PITCH";
  case 0xa338:
    return "CB_COLOR2_SLICE";
  case 0xa339:
    return "CB_COLOR2_VIEW";
  case 0xa33a:
    return "CB_COLOR2_INFO";
  case 0xa33b:
    return "CB_COLOR2_ATTRIB";
  case 0xa33c:
    return "CB_COLOR2_DCC_BASE";
  case 0xa33d:
    return "CB_COLOR2_CMASK";
  case 0xa33e:
    return "CB_COLOR2_CMASK_SLICE";
  case 0xa33f:
    return "CB_COLOR2_FMASK";
  case 0xa340:
    return "CB_COLOR2_FMASK_SLICE";
  case 0xa341:
    return "CB_COLOR2_CLEAR_WORD0";
  case 0xa342:
    return "CB_COLOR2_CLEAR_WORD1";
  case 0xa345:
    return "CB_COLOR3_BASE";
  case 0xa346:
    return "CB_COLOR3_PITCH";
  case 0xa347:
    return "CB_COLOR3_SLICE";
  case 0xa348:
    return "CB_COLOR3_VIEW";
  case 0xa349:
    return "CB_COLOR3_INFO";
  case 0xa34a:
    return "CB_COLOR3_ATTRIB";
  case 0xa34b:
    return "CB_COLOR3_DCC_BASE";
  case 0xa34c:
    return "CB_COLOR3_CMASK";
  case 0xa34d:
    return "CB_COLOR3_CMASK_SLICE";
  case 0xa34e:
    return "CB_COLOR3_FMASK";
  case 0xa34f:
    return "CB_COLOR3_FMASK_SLICE";
  case 0xa350:
    return "CB_COLOR3_CLEAR_WORD0";
  case 0xa351:
    return "CB_COLOR3_CLEAR_WORD1";
  case 0xa354:
    return "CB_COLOR4_BASE";
  case 0xa355:
    return "CB_COLOR4_PITCH";
  case 0xa356:
    return "CB_COLOR4_SLICE";
  case 0xa357:
    return "CB_COLOR4_VIEW";
  case 0xa358:
    return "CB_COLOR4_INFO";
  case 0xa359:
    return "CB_COLOR4_ATTRIB";
  case 0xa35a:
    return "CB_COLOR4_DCC_BASE";
  case 0xa35b:
    return "CB_COLOR4_CMASK";
  case 0xa35c:
    return "CB_COLOR4_CMASK_SLICE";
  case 0xa35d:
    return "CB_COLOR4_FMASK";
  case 0xa35e:
    return "CB_COLOR4_FMASK_SLICE";
  case 0xa35f:
    return "CB_COLOR4_CLEAR_WORD0";
  case 0xa360:
    return "CB_COLOR4_CLEAR_WORD1";
  case 0xa363:
    return "CB_COLOR5_BASE";
  case 0xa364:
    return "CB_COLOR5_PITCH";
  case 0xa365:
    return "CB_COLOR5_SLICE";
  case 0xa366:
    return "CB_COLOR5_VIEW";
  case 0xa367:
    return "CB_COLOR5_INFO";
  case 0xa368:
    return "CB_COLOR5_ATTRIB";
  case 0xa369:
    return "CB_COLOR5_DCC_BASE";
  case 0xa36a:
    return "CB_COLOR5_CMASK";
  case 0xa36b:
    return "CB_COLOR5_CMASK_SLICE";
  case 0xa36c:
    return "CB_COLOR5_FMASK";
  case 0xa36d:
    return "CB_COLOR5_FMASK_SLICE";
  case 0xa36e:
    return "CB_COLOR5_CLEAR_WORD0";
  case 0xa36f:
    return "CB_COLOR5_CLEAR_WORD1";
  case 0xa372:
    return "CB_COLOR6_BASE";
  case 0xa373:
    return "CB_COLOR6_PITCH";
  case 0xa374:
    return "CB_COLOR6_SLICE";
  case 0xa375:
    return "CB_COLOR6_VIEW";
  case 0xa376:
    return "CB_COLOR6_INFO";
  case 0xa377:
    return "CB_COLOR6_ATTRIB";
  case 0xa378:
    return "CB_COLOR6_DCC_BASE";
  case 0xa379:
    return "CB_COLOR6_CMASK";
  case 0xa37a:
    return "CB_COLOR6_CMASK_SLICE";
  case 0xa37b:
    return "CB_COLOR6_FMASK";
  case 0xa37c:
    return "CB_COLOR6_FMASK_SLICE";
  case 0xa37d:
    return "CB_COLOR6_CLEAR_WORD0";
  case 0xa37e:
    return "CB_COLOR6_CLEAR_WORD1";
  case 0xa381:
    return "CB_COLOR7_BASE";
  case 0xa382:
    return "CB_COLOR7_PITCH";
  case 0xa383:
    return "CB_COLOR7_SLICE";
  case 0xa384:
    return "CB_COLOR7_VIEW";
  case 0xa385:
    return "CB_COLOR7_INFO";
  case 0xa386:
    return "CB_COLOR7_ATTRIB";
  case 0xa387:
    return "CB_COLOR7_DCC_BASE";
  case 0xa388:
    return "CB_COLOR7_CMASK";
  case 0xa389:
    return "CB_COLOR7_CMASK_SLICE";
  case 0xa38a:
    return "CB_COLOR7_FMASK";
  case 0xa38b:
    return "CB_COLOR7_FMASK_SLICE";
  case 0xa38c:
    return "CB_COLOR7_CLEAR_WORD0";
  case 0xa38d:
    return "CB_COLOR7_CLEAR_WORD1";
  case 0xc03f:
    return "CP_STRMOUT_CNTL";
  case 0xc079:
    return "CP_COHER_BASE_HI";
  case 0xc07d:
    return "CP_COHER_SIZE";
  case 0xc07e:
    return "CP_COHER_BASE";
  case 0xc08b:
    return "CP_DMA_READ_TAGS";
  case 0xc08c:
    return "CP_COHER_SIZE_HI";
  case 0xc200:
    return "GRBM_GFX_INDEX";
  case 0xc242:
    return "VGT_PRIMITIVE_TYPE";
  case 0xc243:
    return "VGT_INDEX_TYPE";
  case 0xc24c:
    return "VGT_NUM_INDICES";
  case 0xc24d:
    return "VGT_NUM_INSTANCES";
  case 0xc340:
    return "SQ_THREAD_TRACE_USERDATA_0";
  case 0xc341:
    return "SQ_THREAD_TRACE_USERDATA_1";
  case 0xc342:
    return "SQ_THREAD_TRACE_USERDATA_2";
  case 0xc343:
    return "SQ_THREAD_TRACE_USERDATA_3";
  case 0xc41d:
    return "GDS_OA_CNTL";
  case 0xc41e:
    return "GDS_OA_COUNTER";
  case 0xc41f:
    return "GDS_OA_ADDRESS";
  case 0xd000:
    return "CPG_PERFCOUNTER1_LO";
  case 0xd001:
    return "CPG_PERFCOUNTER1_HI";
  case 0xd002:
    return "CPG_PERFCOUNTER0_LO";
  case 0xd003:
    return "CPG_PERFCOUNTER0_HI";
  case 0xd004:
    return "CPC_PERFCOUNTER1_LO";
  case 0xd005:
    return "CPC_PERFCOUNTER1_HI";
  case 0xd006:
    return "CPC_PERFCOUNTER0_LO";
  case 0xd007:
    return "CPC_PERFCOUNTER0_HI";
  case 0xd008:
    return "CPF_PERFCOUNTER1_LO";
  case 0xd009:
    return "CPF_PERFCOUNTER1_HI";
  case 0xd00a:
    return "CPF_PERFCOUNTER0_LO";
  case 0xd00b:
    return "CPF_PERFCOUNTER0_HI";
  case 0xd080:
    return "WD_PERFCOUNTER0_LO";
  case 0xd081:
    return "WD_PERFCOUNTER0_HI";
  case 0xd082:
    return "WD_PERFCOUNTER1_LO";
  case 0xd083:
    return "WD_PERFCOUNTER1_HI";
  case 0xd084:
    return "WD_PERFCOUNTER2_LO";
  case 0xd085:
    return "WD_PERFCOUNTER2_HI";
  case 0xd086:
    return "WD_PERFCOUNTER3_LO";
  case 0xd087:
    return "WD_PERFCOUNTER3_HI";
  case 0xd088:
    return "IA_PERFCOUNTER0_LO";
  case 0xd089:
    return "IA_PERFCOUNTER0_HI";
  case 0xd08a:
    return "IA_PERFCOUNTER1_LO";
  case 0xd08b:
    return "IA_PERFCOUNTER1_HI";
  case 0xd08c:
    return "IA_PERFCOUNTER2_LO";
  case 0xd08d:
    return "IA_PERFCOUNTER2_HI";
  case 0xd08e:
    return "IA_PERFCOUNTER3_LO";
  case 0xd08f:
    return "IA_PERFCOUNTER3_HI";
  case 0xd090:
    return "VGT_PERFCOUNTER0_LO";
  case 0xd091:
    return "VGT_PERFCOUNTER0_HI";
  case 0xd092:
    return "VGT_PERFCOUNTER1_LO";
  case 0xd093:
    return "VGT_PERFCOUNTER1_HI";
  case 0xd094:
    return "VGT_PERFCOUNTER2_LO";
  case 0xd095:
    return "VGT_PERFCOUNTER2_HI";
  case 0xd096:
    return "VGT_PERFCOUNTER3_LO";
  case 0xd097:
    return "VGT_PERFCOUNTER3_HI";
  case 0xd100:
    return "PA_SU_PERFCOUNTER0_LO";
  case 0xd101:
    return "PA_SU_PERFCOUNTER0_HI";
  case 0xd102:
    return "PA_SU_PERFCOUNTER1_LO";
  case 0xd103:
    return "PA_SU_PERFCOUNTER1_HI";
  case 0xd104:
    return "PA_SU_PERFCOUNTER2_LO";
  case 0xd105:
    return "PA_SU_PERFCOUNTER2_HI";
  case 0xd106:
    return "PA_SU_PERFCOUNTER3_LO";
  case 0xd107:
    return "PA_SU_PERFCOUNTER3_HI";
  case 0xd140:
    return "PA_SC_PERFCOUNTER0_LO";
  case 0xd141:
    return "PA_SC_PERFCOUNTER0_HI";
  case 0xd142:
    return "PA_SC_PERFCOUNTER1_LO";
  case 0xd143:
    return "PA_SC_PERFCOUNTER1_HI";
  case 0xd144:
    return "PA_SC_PERFCOUNTER2_LO";
  case 0xd145:
    return "PA_SC_PERFCOUNTER2_HI";
  case 0xd146:
    return "PA_SC_PERFCOUNTER3_LO";
  case 0xd147:
    return "PA_SC_PERFCOUNTER3_HI";
  case 0xd148:
    return "PA_SC_PERFCOUNTER4_LO";
  case 0xd149:
    return "PA_SC_PERFCOUNTER4_HI";
  case 0xd14a:
    return "PA_SC_PERFCOUNTER5_LO";
  case 0xd14b:
    return "PA_SC_PERFCOUNTER5_HI";
  case 0xd14c:
    return "PA_SC_PERFCOUNTER6_LO";
  case 0xd14d:
    return "PA_SC_PERFCOUNTER6_HI";
  case 0xd14e:
    return "PA_SC_PERFCOUNTER7_LO";
  case 0xd14f:
    return "PA_SC_PERFCOUNTER7_HI";
  case 0xd180:
    return "SPI_PERFCOUNTER0_HI";
  case 0xd181:
    return "SPI_PERFCOUNTER0_LO";
  case 0xd182:
    return "SPI_PERFCOUNTER1_HI";
  case 0xd183:
    return "SPI_PERFCOUNTER1_LO";
  case 0xd184:
    return "SPI_PERFCOUNTER2_HI";
  case 0xd185:
    return "SPI_PERFCOUNTER2_LO";
  case 0xd186:
    return "SPI_PERFCOUNTER3_HI";
  case 0xd187:
    return "SPI_PERFCOUNTER3_LO";
  case 0xd188:
    return "SPI_PERFCOUNTER4_HI";
  case 0xd189:
    return "SPI_PERFCOUNTER4_LO";
  case 0xd18a:
    return "SPI_PERFCOUNTER5_HI";
  case 0xd18b:
    return "SPI_PERFCOUNTER5_LO";
  case 0xd1c0:
    return "SQ_PERFCOUNTER0_LO";
  case 0xd1c1:
    return "SQ_PERFCOUNTER0_HI";
  case 0xd1c2:
    return "SQ_PERFCOUNTER1_LO";
  case 0xd1c3:
    return "SQ_PERFCOUNTER1_HI";
  case 0xd1c4:
    return "SQ_PERFCOUNTER2_LO";
  case 0xd1c5:
    return "SQ_PERFCOUNTER2_HI";
  case 0xd1c6:
    return "SQ_PERFCOUNTER3_LO";
  case 0xd1c7:
    return "SQ_PERFCOUNTER3_HI";
  case 0xd1c8:
    return "SQ_PERFCOUNTER4_LO";
  case 0xd1c9:
    return "SQ_PERFCOUNTER4_HI";
  case 0xd1ca:
    return "SQ_PERFCOUNTER5_LO";
  case 0xd1cb:
    return "SQ_PERFCOUNTER5_HI";
  case 0xd1cc:
    return "SQ_PERFCOUNTER6_LO";
  case 0xd1cd:
    return "SQ_PERFCOUNTER6_HI";
  case 0xd1ce:
    return "SQ_PERFCOUNTER7_LO";
  case 0xd1cf:
    return "SQ_PERFCOUNTER7_HI";
  case 0xd1d0:
    return "SQ_PERFCOUNTER8_LO";
  case 0xd1d1:
    return "SQ_PERFCOUNTER8_HI";
  case 0xd1d2:
    return "SQ_PERFCOUNTER9_LO";
  case 0xd1d3:
    return "SQ_PERFCOUNTER9_HI";
  case 0xd1d4:
    return "SQ_PERFCOUNTER10_LO";
  case 0xd1d5:
    return "SQ_PERFCOUNTER10_HI";
  case 0xd1d6:
    return "SQ_PERFCOUNTER11_LO";
  case 0xd1d7:
    return "SQ_PERFCOUNTER11_HI";
  case 0xd1d8:
    return "SQ_PERFCOUNTER12_LO";
  case 0xd1d9:
    return "SQ_PERFCOUNTER12_HI";
  case 0xd1da:
    return "SQ_PERFCOUNTER13_LO";
  case 0xd1db:
    return "SQ_PERFCOUNTER13_HI";
  case 0xd1dc:
    return "SQ_PERFCOUNTER14_LO";
  case 0xd1dd:
    return "SQ_PERFCOUNTER14_HI";
  case 0xd1de:
    return "SQ_PERFCOUNTER15_LO";
  case 0xd1df:
    return "SQ_PERFCOUNTER15_HI";
  case 0xd240:
    return "SX_PERFCOUNTER0_LO";
  case 0xd241:
    return "SX_PERFCOUNTER0_HI";
  case 0xd242:
    return "SX_PERFCOUNTER1_LO";
  case 0xd243:
    return "SX_PERFCOUNTER1_HI";
  case 0xd244:
    return "SX_PERFCOUNTER2_LO";
  case 0xd245:
    return "SX_PERFCOUNTER2_HI";
  case 0xd246:
    return "SX_PERFCOUNTER3_LO";
  case 0xd247:
    return "SX_PERFCOUNTER3_HI";
  case 0xd280:
    return "GDS_PERFCOUNTER0_LO";
  case 0xd281:
    return "GDS_PERFCOUNTER0_HI";
  case 0xd282:
    return "GDS_PERFCOUNTER1_LO";
  case 0xd283:
    return "GDS_PERFCOUNTER1_HI";
  case 0xd284:
    return "GDS_PERFCOUNTER2_LO";
  case 0xd285:
    return "GDS_PERFCOUNTER2_HI";
  case 0xd286:
    return "GDS_PERFCOUNTER3_LO";
  case 0xd287:
    return "GDS_PERFCOUNTER3_HI";
  case 0xd2c0:
    return "TA_PERFCOUNTER0_LO";
  case 0xd2c1:
    return "TA_PERFCOUNTER0_HI";
  case 0xd2c2:
    return "TA_PERFCOUNTER1_LO";
  case 0xd2c3:
    return "TA_PERFCOUNTER1_HI";
  case 0xd300:
    return "TD_PERFCOUNTER0_LO";
  case 0xd301:
    return "TD_PERFCOUNTER0_HI";
  case 0xd302:
    return "TD_PERFCOUNTER1_LO";
  case 0xd303:
    return "TD_PERFCOUNTER1_HI";
  case 0xd340:
    return "TCP_PERFCOUNTER0_LO";
  case 0xd341:
    return "TCP_PERFCOUNTER0_HI";
  case 0xd342:
    return "TCP_PERFCOUNTER1_LO";
  case 0xd343:
    return "TCP_PERFCOUNTER1_HI";
  case 0xd344:
    return "TCP_PERFCOUNTER2_LO";
  case 0xd345:
    return "TCP_PERFCOUNTER2_HI";
  case 0xd346:
    return "TCP_PERFCOUNTER3_LO";
  case 0xd347:
    return "TCP_PERFCOUNTER3_HI";
  case 0xd380:
    return "TCC_PERFCOUNTER0_LO";
  case 0xd381:
    return "TCC_PERFCOUNTER0_HI";
  case 0xd382:
    return "TCC_PERFCOUNTER1_LO";
  case 0xd383:
    return "TCC_PERFCOUNTER1_HI";
  case 0xd384:
    return "TCC_PERFCOUNTER2_LO";
  case 0xd385:
    return "TCC_PERFCOUNTER2_HI";
  case 0xd386:
    return "TCC_PERFCOUNTER3_LO";
  case 0xd387:
    return "TCC_PERFCOUNTER3_HI";
  case 0xd390:
    return "TCA_PERFCOUNTER0_LO";
  case 0xd391:
    return "TCA_PERFCOUNTER0_HI";
  case 0xd392:
    return "TCA_PERFCOUNTER1_LO";
  case 0xd393:
    return "TCA_PERFCOUNTER1_HI";
  case 0xd394:
    return "TCA_PERFCOUNTER2_LO";
  case 0xd395:
    return "TCA_PERFCOUNTER2_HI";
  case 0xd396:
    return "TCA_PERFCOUNTER3_LO";
  case 0xd397:
    return "TCA_PERFCOUNTER3_HI";
  case 0xd3a0:
    return "TCS_PERFCOUNTER0_LO";
  case 0xd3a1:
    return "TCS_PERFCOUNTER0_HI";
  case 0xd3a2:
    return "TCS_PERFCOUNTER1_LO";
  case 0xd3a3:
    return "TCS_PERFCOUNTER1_HI";
  case 0xd3a4:
    return "TCS_PERFCOUNTER2_LO";
  case 0xd3a5:
    return "TCS_PERFCOUNTER2_HI";
  case 0xd3a6:
    return "TCS_PERFCOUNTER3_LO";
  case 0xd3a7:
    return "TCS_PERFCOUNTER3_HI";
  case 0xd406:
    return "CB_PERFCOUNTER0_LO";
  case 0xd407:
    return "CB_PERFCOUNTER0_HI";
  case 0xd408:
    return "CB_PERFCOUNTER1_LO";
  case 0xd409:
    return "CB_PERFCOUNTER1_HI";
  case 0xd40a:
    return "CB_PERFCOUNTER2_LO";
  case 0xd40b:
    return "CB_PERFCOUNTER2_HI";
  case 0xd40c:
    return "CB_PERFCOUNTER3_LO";
  case 0xd40d:
    return "CB_PERFCOUNTER3_HI";
  case 0xd440:
    return "DB_PERFCOUNTER0_LO";
  case 0xd441:
    return "DB_PERFCOUNTER0_HI";
  case 0xd442:
    return "DB_PERFCOUNTER1_LO";
  case 0xd443:
    return "DB_PERFCOUNTER1_HI";
  case 0xd444:
    return "DB_PERFCOUNTER2_LO";
  case 0xd445:
    return "DB_PERFCOUNTER2_HI";
  case 0xd446:
    return "DB_PERFCOUNTER3_LO";
  case 0xd447:
    return "DB_PERFCOUNTER3_HI";
  case 0xd800:
    return "CPG_PERFCOUNTER1_SELECT";
  case 0xd801:
    return "CPG_PERFCOUNTER0_SELECT1";
  case 0xd802:
    return "CPG_PERFCOUNTER0_SELECT";
  case 0xd803:
    return "CPC_PERFCOUNTER1_SELECT";
  case 0xd804:
    return "CPC_PERFCOUNTER0_SELECT1";
  case 0xd805:
    return "CPF_PERFCOUNTER1_SELECT";
  case 0xd806:
    return "CPF_PERFCOUNTER0_SELECT1";
  case 0xd807:
    return "CPF_PERFCOUNTER0_SELECT";
  case 0xd808:
    return "CP_PERFMON_CNTL";
  case 0xd809:
    return "CPC_PERFCOUNTER0_SELECT";
  case 0xd880:
    return "WD_PERFCOUNTER0_SELECT";
  case 0xd881:
    return "WD_PERFCOUNTER1_SELECT";
  case 0xd882:
    return "WD_PERFCOUNTER2_SELECT";
  case 0xd883:
    return "WD_PERFCOUNTER3_SELECT";
  case 0xd884:
    return "IA_PERFCOUNTER0_SELECT";
  case 0xd885:
    return "IA_PERFCOUNTER1_SELECT";
  case 0xd886:
    return "IA_PERFCOUNTER2_SELECT";
  case 0xd887:
    return "IA_PERFCOUNTER3_SELECT";
  case 0xd888:
    return "IA_PERFCOUNTER0_SELECT1";
  case 0xd88c:
    return "VGT_PERFCOUNTER0_SELECT";
  case 0xd88d:
    return "VGT_PERFCOUNTER1_SELECT";
  case 0xd88e:
    return "VGT_PERFCOUNTER2_SELECT";
  case 0xd88f:
    return "VGT_PERFCOUNTER3_SELECT";
  case 0xd890:
    return "VGT_PERFCOUNTER0_SELECT1";
  case 0xd891:
    return "VGT_PERFCOUNTER1_SELECT1";
  case 0xd900:
    return "PA_SU_PERFCOUNTER0_SELECT";
  case 0xd901:
    return "PA_SU_PERFCOUNTER0_SELECT1";
  case 0xd902:
    return "PA_SU_PERFCOUNTER1_SELECT";
  case 0xd903:
    return "PA_SU_PERFCOUNTER1_SELECT1";
  case 0xd904:
    return "PA_SU_PERFCOUNTER2_SELECT";
  case 0xd905:
    return "PA_SU_PERFCOUNTER3_SELECT";
  case 0xd940:
    return "PA_SC_PERFCOUNTER0_SELECT";
  case 0xd941:
    return "PA_SC_PERFCOUNTER0_SELECT1";
  case 0xd942:
    return "PA_SC_PERFCOUNTER1_SELECT";
  case 0xd943:
    return "PA_SC_PERFCOUNTER2_SELECT";
  case 0xd944:
    return "PA_SC_PERFCOUNTER3_SELECT";
  case 0xd945:
    return "PA_SC_PERFCOUNTER4_SELECT";
  case 0xd946:
    return "PA_SC_PERFCOUNTER5_SELECT";
  case 0xd947:
    return "PA_SC_PERFCOUNTER6_SELECT";
  case 0xd948:
    return "PA_SC_PERFCOUNTER7_SELECT";
  case 0xd980:
    return "SPI_PERFCOUNTER0_SELECT";
  case 0xd981:
    return "SPI_PERFCOUNTER1_SELECT";
  case 0xd982:
    return "SPI_PERFCOUNTER2_SELECT";
  case 0xd983:
    return "SPI_PERFCOUNTER3_SELECT";
  case 0xd984:
    return "SPI_PERFCOUNTER0_SELECT1";
  case 0xd985:
    return "SPI_PERFCOUNTER1_SELECT1";
  case 0xd986:
    return "SPI_PERFCOUNTER2_SELECT1";
  case 0xd987:
    return "SPI_PERFCOUNTER3_SELECT1";
  case 0xd988:
    return "SPI_PERFCOUNTER4_SELECT";
  case 0xd989:
    return "SPI_PERFCOUNTER5_SELECT";
  case 0xd98a:
    return "SPI_PERFCOUNTER_BINS";
  case 0xd9c0:
    return "SQ_PERFCOUNTER0_SELECT";
  case 0xd9c1:
    return "SQ_PERFCOUNTER1_SELECT";
  case 0xd9c2:
    return "SQ_PERFCOUNTER2_SELECT";
  case 0xd9c3:
    return "SQ_PERFCOUNTER3_SELECT";
  case 0xd9c4:
    return "SQ_PERFCOUNTER4_SELECT";
  case 0xd9c5:
    return "SQ_PERFCOUNTER5_SELECT";
  case 0xd9c6:
    return "SQ_PERFCOUNTER6_SELECT";
  case 0xd9c7:
    return "SQ_PERFCOUNTER7_SELECT";
  case 0xd9c8:
    return "SQ_PERFCOUNTER8_SELECT";
  case 0xd9c9:
    return "SQ_PERFCOUNTER9_SELECT";
  case 0xd9ca:
    return "SQ_PERFCOUNTER10_SELECT";
  case 0xd9cb:
    return "SQ_PERFCOUNTER11_SELECT";
  case 0xd9cc:
    return "SQ_PERFCOUNTER12_SELECT";
  case 0xd9cd:
    return "SQ_PERFCOUNTER13_SELECT";
  case 0xd9ce:
    return "SQ_PERFCOUNTER14_SELECT";
  case 0xd9cf:
    return "SQ_PERFCOUNTER15_SELECT";
  case 0xd9e0:
    return "SQ_PERFCOUNTER_CTRL";
  case 0xda40:
    return "SX_PERFCOUNTER0_SELECT";
  case 0xda41:
    return "SX_PERFCOUNTER1_SELECT";
  case 0xda42:
    return "SX_PERFCOUNTER2_SELECT";
  case 0xda43:
    return "SX_PERFCOUNTER3_SELECT";
  case 0xda44:
    return "SX_PERFCOUNTER0_SELECT1";
  case 0xda45:
    return "SX_PERFCOUNTER1_SELECT1";
  case 0xda80:
    return "GDS_PERFCOUNTER0_SELECT";
  case 0xda81:
    return "GDS_PERFCOUNTER1_SELECT";
  case 0xda82:
    return "GDS_PERFCOUNTER2_SELECT";
  case 0xda83:
    return "GDS_PERFCOUNTER3_SELECT";
  case 0xda84:
    return "GDS_PERFCOUNTER0_SELECT1";
  case 0xdac0:
    return "TA_PERFCOUNTER0_SELECT";
  case 0xdac1:
    return "TA_PERFCOUNTER0_SELECT1";
  case 0xdac2:
    return "TA_PERFCOUNTER1_SELECT";
  case 0xdb00:
    return "TD_PERFCOUNTER0_SELECT";
  case 0xdb01:
    return "TD_PERFCOUNTER0_SELECT1";
  case 0xdb02:
    return "TD_PERFCOUNTER1_SELECT";
  case 0xdb40:
    return "TCP_PERFCOUNTER0_SELECT";
  case 0xdb41:
    return "TCP_PERFCOUNTER0_SELECT1";
  case 0xdb42:
    return "TCP_PERFCOUNTER1_SELECT";
  case 0xdb43:
    return "TCP_PERFCOUNTER1_SELECT1";
  case 0xdb44:
    return "TCP_PERFCOUNTER2_SELECT";
  case 0xdb45:
    return "TCP_PERFCOUNTER3_SELECT";
  case 0xdb80:
    return "TCC_PERFCOUNTER0_SELECT";
  case 0xdb81:
    return "TCC_PERFCOUNTER0_SELECT1";
  case 0xdb82:
    return "TCC_PERFCOUNTER1_SELECT";
  case 0xdb83:
    return "TCC_PERFCOUNTER1_SELECT1";
  case 0xdb84:
    return "TCC_PERFCOUNTER2_SELECT";
  case 0xdb85:
    return "TCC_PERFCOUNTER3_SELECT";
  case 0xdb90:
    return "TCA_PERFCOUNTER0_SELECT";
  case 0xdb91:
    return "TCA_PERFCOUNTER0_SELECT1";
  case 0xdb92:
    return "TCA_PERFCOUNTER1_SELECT";
  case 0xdb93:
    return "TCA_PERFCOUNTER1_SELECT1";
  case 0xdb94:
    return "TCA_PERFCOUNTER2_SELECT";
  case 0xdb95:
    return "TCA_PERFCOUNTER3_SELECT";
  case 0xdba0:
    return "TCS_PERFCOUNTER0_SELECT";
  case 0xdba1:
    return "TCS_PERFCOUNTER0_SELECT1";
  case 0xdba2:
    return "TCS_PERFCOUNTER1_SELECT";
  case 0xdba3:
    return "TCS_PERFCOUNTER2_SELECT";
  case 0xdba4:
    return "TCS_PERFCOUNTER3_SELECT";
  case 0xdc00:
    return "CB_PERFCOUNTER_FILTER";
  case 0xdc01:
    return "CB_PERFCOUNTER0_SELECT";
  case 0xdc02:
    return "CB_PERFCOUNTER0_SELECT1";
  case 0xdc03:
    return "CB_PERFCOUNTER1_SELECT";
  case 0xdc04:
    return "CB_PERFCOUNTER2_SELECT";
  case 0xdc05:
    return "CB_PERFCOUNTER3_SELECT";
  case 0xdc40:
    return "DB_PERFCOUNTER0_SELECT";
  case 0xdc41:
    return "DB_PERFCOUNTER0_SELECT1";
  case 0xdc42:
    return "DB_PERFCOUNTER1_SELECT";
  case 0xdc43:
    return "DB_PERFCOUNTER1_SELECT1";
  case 0xdc44:
    return "DB_PERFCOUNTER2_SELECT";
  case 0xdc46:
    return "DB_PERFCOUNTER3_SELECT";
  }

  return nullptr;
}
